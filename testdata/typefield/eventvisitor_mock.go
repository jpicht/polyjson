// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jpicht/polyjson/testdata/typefield (interfaces: EventVisitor)
//
// Generated by this command:
//
//	mockgen -package typefield -destination eventvisitor_mock.go . EventVisitor
//

// Package typefield is a generated GoMock package.
package typefield

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockEventVisitor is a mock of EventVisitor interface.
type MockEventVisitor struct {
	ctrl     *gomock.Controller
	recorder *MockEventVisitorMockRecorder
}

// MockEventVisitorMockRecorder is the mock recorder for MockEventVisitor.
type MockEventVisitorMockRecorder struct {
	mock *MockEventVisitor
}

// NewMockEventVisitor creates a new mock instance.
func NewMockEventVisitor(ctrl *gomock.Controller) *MockEventVisitor {
	mock := &MockEventVisitor{ctrl: ctrl}
	mock.recorder = &MockEventVisitorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventVisitor) EXPECT() *MockEventVisitorMockRecorder {
	return m.recorder
}

// VisitFailedLogin mocks base method.
func (m *MockEventVisitor) VisitFailedLogin(arg0 FailedLogin) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "VisitFailedLogin", arg0)
}

// VisitFailedLogin indicates an expected call of VisitFailedLogin.
func (mr *MockEventVisitorMockRecorder) VisitFailedLogin(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VisitFailedLogin", reflect.TypeOf((*MockEventVisitor)(nil).VisitFailedLogin), arg0)
}

// VisitLogin mocks base method.
func (m *MockEventVisitor) VisitLogin(arg0 Login) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "VisitLogin", arg0)
}

// VisitLogin indicates an expected call of VisitLogin.
func (mr *MockEventVisitorMockRecorder) VisitLogin(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VisitLogin", reflect.TypeOf((*MockEventVisitor)(nil).VisitLogin), arg0)
}

// VisitLogout mocks base method.
func (m *MockEventVisitor) VisitLogout(arg0 Logout) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "VisitLogout", arg0)
}

// VisitLogout indicates an expected call of VisitLogout.
func (mr *MockEventVisitorMockRecorder) VisitLogout(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VisitLogout", reflect.TypeOf((*MockEventVisitor)(nil).VisitLogout), arg0)
}
